# service name
service: gettogether

#add plugins
plugins:
  - serverless-pseudo-parameters
  - serverless-iam-roles-per-function

#variables for the yml
custom:
  defaultRegion: eu-west-1
  defaultStage: dev${env:SLSUSER,""}
  getTogethersTableName: ${self:provider.stage}-gettogethers
  joinGetTogetherSnsTopicName: ${self:provider.stage}-joingettogethers
  joinGetTogetherSnsTopic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:${self:custom.joinGetTogetherSnsTopicName}


# the provider (azure, aws, ibmcloud...)
provider: 
  name: aws
  runtime: nodejs8.10
  #opt is for the severless run when write --region at launch
  region: ${opt:region, self:custom.defaultRegion}
  # the environments of the lambdas (prod, pre, )
  stage: ${opt:stage, self:custom.defaultStage}

resources:
  Resources:
    GetTogethersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.getTogethersTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST 

functions:
  joinGetTogether:
    handler: src/functions/joinGetTogether.handler
    events:
      - http:
          path: api/getTogether
          method: post
    environment:
      joinGetTogetherSnsTopic: ${self:custom.joinGetTogetherSnsTopic}
    iamRoleStatements:
      - Effect: Allow
        Action: sns:Publish
        Resource: ${self:custom.joinGetTogetherSnsTopic}

  notifyOrganizer:
    handler: src/functions/notifyOrganizer.handler
    events:
      - sns: ${self:custom.joinGetTogetherSnsTopicName}

  getTogethers:
    handler: src/functions/getGetTogethers.handler
    events:
      - http:
          path: api/getTogethers
          method: get
    #Add permissions for the dynamo access.
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.getTogethersTableName}
    environment:
      getTogethersTableName: ${self:custom.getTogethersTableName}

  helloWorld: 
    # after the point is the function to invoke
    handler: src/functions/helloWorld.handler
    events:
      - http:
          path: api/helloWorld/{name}
          method: get

  helloWorldPost:
    # after the point is the function to invoke
    handler: src/functions/helloWorld.handlerpost
    events:
      - http:
          path: api/helloWorld
          method: post